// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Condominio {
  condominioid    Int               @id @default(autoincrement())
  nomecondominio  String
  endereco        String
  telefone        String
  Clientes        Clientes[]
  assembleia      assembleia[]
  Inquilinos      Inquilinos[]
  PrestacaoContas PrestacaoContas[]
}

model Clientes {
  clienteid    Int          @id @default(autoincrement())
  apartamento  String
  nome         String
  cpf          String       @unique
  telefone     String
  email        String
  CondominioID Int
  Condominio   Condominio   @relation(fields: [CondominioID], references: [condominioid])
  Inquilinos   Inquilinos[]
}

model Inquilinos {
  inquilinosid Int        @id @default(autoincrement())
  apartamento  String
  nome         String
  cpf          String     @unique
  telefone     String
  email        String
  CondominioID Int
  Condominio   Condominio @relation(fields: [CondominioID], references: [condominioid])
  ClienteID    Int // <--- novo campo
  Cliente      Clientes   @relation(fields: [ClienteID], references: [clienteid])
}

model assembleia {
  assembleiaid Int        @id @default(autoincrement())
  descricao    String
  CondominioID Int
  Condominio   Condominio @relation(fields: [CondominioID], references: [condominioid])
}

model comunicados {
  comunicadosid  Int    @id @default(autoincrement())
  datacomunicado String
  descricao      String
}

model PrestacaoContas {
  prestacaoid  Int        @id @default(autoincrement())
  documento    String // nome do arquivo PDF
  mes          DateTime
  CondominioID Int
  Condominio   Condominio @relation(fields: [CondominioID], references: [condominioid])
}
